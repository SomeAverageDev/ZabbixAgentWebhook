<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2022-04-20T21:17:19Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Zabbix Agent Webhook Listener</template>
            <name>Zabbix Agent Webhook Listener</name>
            <description>Template associated to Zabbix Agent Webhook Listener Docker Image.&#13;
It provides all necessary items to collect JSON payload from main CSP.</description>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>AWS</name>
                </application>
                <application>
                    <name>Azure</name>
                </application>
                <application>
                    <name>GCP</name>
                </application>
                <application>
                    <name>Webhook</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>webhook json data trapper : aws-sns</name>
                    <type>TRAP</type>
                    <key>zwl.aws-sns</key>
                    <delay>0</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Trapper item to collect AWS SNS JSON payload from webhook listener</description>
                    <applications>
                        <application>
                            <name>AWS</name>
                        </application>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>webhook json data trapper : azure-monitor</name>
                    <type>TRAP</type>
                    <key>zwl.az-mon</key>
                    <delay>0</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Trapper item to collect Azure Monitor JSON payload from webhook listener</description>
                    <applications>
                        <application>
                            <name>Azure</name>
                        </application>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>webhook json data trapper : gcp</name>
                    <type>TRAP</type>
                    <key>zwl.gcp</key>
                    <delay>0</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Trapper item to collect GCP alerts JSON payload from webhook listener</description>
                    <applications>
                        <application>
                            <name>GCP</name>
                        </application>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>webhook json data trapper : generic</name>
                    <type>TRAP</type>
                    <key>zwl.webhook</key>
                    <delay>0</delay>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Trapper item to collect generic JSON payload from webhook listener</description>
                    <applications>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{strlen()}&gt;0</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Webhook generic event : {ITEM.VALUE}</name>
                            <priority>INFO</priority>
                            <type>MULTIPLE</type>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>webhook container health collection</name>
                    <type>HTTP_AGENT</type>
                    <key>zwl.webhook.countainer.health[{$ZBX_WHL_HOST},{$ZBX_WHL_PORT}]</key>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Collects health status of Zabbix Agent Webhook Listener service</description>
                    <applications>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                    <timeout>10s</timeout>
                    <url>{$ZBX_WHL_PROTO}://{$ZBX_WHL_HOST}:{$ZBX_WHL_PORT}/health</url>
                    <triggers>
                        <trigger>
                            <expression>{nodata(15m)}=1</expression>
                            <name>Zabbix webhook container health has no data since 15m</name>
                            <priority>WARNING</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Zabbix webhook container health has no data since 30m</name>
                                    <expression>{Zabbix Agent Webhook Listener:zwl.webhook.countainer.health[{$ZBX_WHL_HOST},{$ZBX_WHL_PORT}].nodata(30m)}=1</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <expression>{nodata(30m)}=1</expression>
                            <name>Zabbix webhook container health has no data since 30m</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>webhook stats counter AWS-SNS</name>
                    <type>DEPENDENT</type>
                    <key>zwl.webhook.countainer.stats.aws-sns</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of payloads received from AWS-SNS</description>
                    <applications>
                        <application>
                            <name>AWS</name>
                        </application>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.counters.aws-sns.received</params>
                            <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>300</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>zwl.webhook.countainer.stats[{$ZBX_WHL_HOST},{$ZBX_WHL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>webhook stats counter Azure</name>
                    <type>DEPENDENT</type>
                    <key>zwl.webhook.countainer.stats.azure</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of payloads received from Azure</description>
                    <applications>
                        <application>
                            <name>Azure</name>
                        </application>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.counters.az-mon.received</params>
                            <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>300</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>zwl.webhook.countainer.stats[{$ZBX_WHL_HOST},{$ZBX_WHL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>webhook stats errors count</name>
                    <type>DEPENDENT</type>
                    <key>zwl.webhook.countainer.stats.errors</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of errors detected</description>
                    <applications>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.counters.error</params>
                            <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>300</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>zwl.webhook.countainer.stats[{$ZBX_WHL_HOST},{$ZBX_WHL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>webhook stats counter GCP</name>
                    <type>DEPENDENT</type>
                    <key>zwl.webhook.countainer.stats.gcp</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of payloads received from GCP</description>
                    <applications>
                        <application>
                            <name>GCP</name>
                        </application>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.counters.gcp.received</params>
                            <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>300</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>zwl.webhook.countainer.stats[{$ZBX_WHL_HOST},{$ZBX_WHL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>webhook stats counter Generic</name>
                    <type>DEPENDENT</type>
                    <key>zwl.webhook.countainer.stats.generic</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Number of payloads received from generic</description>
                    <applications>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.counters.generic.received</params>
                            <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>300</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>zwl.webhook.countainer.stats[{$ZBX_WHL_HOST},{$ZBX_WHL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>webhook stats error messages</name>
                    <type>DEPENDENT</type>
                    <key>zwl.webhook.countainer.stats.messages</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Error messages collected</description>
                    <applications>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.messages</params>
                            <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>300</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>zwl.webhook.countainer.stats[{$ZBX_WHL_HOST},{$ZBX_WHL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>webhook stats startup time</name>
                    <type>DEPENDENT</type>
                    <key>zwl.webhook.countainer.stats.started</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <units>unixtime</units>
                    <description>Zabbix Agent Webhook Listener Docker container startup time</description>
                    <applications>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.started</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>900</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>zwl.webhook.countainer.stats[{$ZBX_WHL_HOST},{$ZBX_WHL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>webhook stats status</name>
                    <type>DEPENDENT</type>
                    <key>zwl.webhook.countainer.stats.status</key>
                    <delay>0</delay>
                    <history>30d</history>
                    <description>Zabbix Agent Webhook Listener Docker container status</description>
                    <applications>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.status</params>
                            <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>300</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>zwl.webhook.countainer.stats[{$ZBX_WHL_HOST},{$ZBX_WHL_PORT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>webhook container stats collection</name>
                    <type>HTTP_AGENT</type>
                    <key>zwl.webhook.countainer.stats[{$ZBX_WHL_HOST},{$ZBX_WHL_PORT}]</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <authtype>BASIC</authtype>
                    <username>{$ZBX_WHL_USER}</username>
                    <password>{$ZBX_WHL_PWD}</password>
                    <description>Collects statistics of Zabbix Agent Webhook Listener service</description>
                    <applications>
                        <application>
                            <name>Webhook</name>
                        </application>
                    </applications>
                    <timeout>10s</timeout>
                    <url>{$ZBX_WHL_PROTO}://{$ZBX_WHL_HOST}:{$ZBX_WHL_PORT}/health/stats</url>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>aws-sns message discovery</name>
                    <type>DEPENDENT</type>
                    <key>zwl.aws-sns[discovery]</key>
                    <delay>0</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>aws-sns message : {#ID} on topic {#TOPIC}</name>
                            <type>DEPENDENT</type>
                            <key>zwl.aws-sns.message[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <applications>
                                <application>
                                    <name>AWS</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>var data = JSON.parse(value); 
message = JSON.parse(data.Message)
return 'Message['+ data.Timestamp +']: '+ message.AlarmName +': ' + message.NewStateReason +' on topic:'+ data.TopicArn</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>zwl.aws-sns</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{strlen()}&gt;0</expression>
                                    <recovery_mode>NONE</recovery_mode>
                                    <name>AWS-SNS Alert:{ITEM.VALUE1} on topic {#TOPIC}</name>
                                    <priority>WARNING</priority>
                                    <type>MULTIPLE</type>
                                    <manual_close>YES</manual_close>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>zwl.aws-sns</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#ID}</lld_macro>
                            <path>$.MessageId</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#TOPIC}</lld_macro>
                            <path>$.TopicArn</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>return '['+value+']'</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <name>Azure monitor alerts discovery</name>
                    <type>DEPENDENT</type>
                    <key>zwl.azure.alerts[discovery]</key>
                    <delay>0</delay>
                    <lifetime>7d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>Azure alert state [{#ID}]</name>
                            <type>DEPENDENT</type>
                            <key>zwl.az.alert.state[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <applications>
                                <application>
                                    <name>Azure</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.data.essentials.monitorCondition</params>
                                    <error_handler>DISCARD_VALUE</error_handler>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>zwl.az-mon</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Azure alert summary [{#ID}]</name>
                            <type>DEPENDENT</type>
                            <key>zwl.az.alert.summary[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <applications>
                                <application>
                                    <name>Azure</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>NOT_MATCHES_REGEX</type>
                                    <params>&quot;monitorCondition&quot;:&quot;Resolved&quot;,</params>
                                    <error_handler>DISCARD_VALUE</error_handler>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>var data = JSON.parse(value);
if (data.schemaId.localeCompare('azureMonitorCommonAlertSchema') == 0) {
  msg = 'Message['+ data.data.essentials.firedDateTime +']: '+ data.data.essentials.alertRule +': '+ data.data.essentials.severity
  if (typeof data.data.essentials.configurationItems !== 'undefined') {
    msg = msg + ' on topic:' + data.data.essentials.configurationItems.join(', ')
  }
  return msg
}
return 'unknown azure format:'+JSON.stringify(data)
</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>zwl.az-mon</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Zabbix Agent Webhook Listener:zwl.az.alert.summary[{#ID}].str(Sev0)}=1 and&#13;
{Zabbix Agent Webhook Listener:zwl.az.alert.state[{#ID}].str(Resolved)}=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Zabbix Agent Webhook Listener:zwl.az.alert.state[{#ID}].str(Resolved)}=1</recovery_expression>
                            <name>Azure alerts:{ITEM.VALUE}</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Zabbix Agent Webhook Listener:zwl.az.alert.summary[{#ID}].str(Sev1)}=1 and&#13;
{Zabbix Agent Webhook Listener:zwl.az.alert.state[{#ID}].str(Resolved)}=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Zabbix Agent Webhook Listener:zwl.az.alert.state[{#ID}].str(Resolved)}=1</recovery_expression>
                            <name>Azure alerts:{ITEM.VALUE}</name>
                            <priority>AVERAGE</priority>
                            <manual_close>YES</manual_close>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Zabbix Agent Webhook Listener:zwl.az.alert.summary[{#ID}].str(Sev2)}=1 and&#13;
{Zabbix Agent Webhook Listener:zwl.az.alert.state[{#ID}].str(Resolved)}=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Zabbix Agent Webhook Listener:zwl.az.alert.state[{#ID}].str(Resolved)}=1</recovery_expression>
                            <name>Azure alerts:{ITEM.VALUE}</name>
                            <priority>WARNING</priority>
                            <manual_close>YES</manual_close>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Zabbix Agent Webhook Listener:zwl.az.alert.summary[{#ID}].str(Sev4)}=1 and&#13;
{Zabbix Agent Webhook Listener:zwl.az.alert.state[{#ID}].str(Resolved)}=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Zabbix Agent Webhook Listener:zwl.az.alert.state[{#ID}].str(Resolved)}=1</recovery_expression>
                            <name>Azure alerts:{ITEM.VALUE}</name>
                            <priority>INFO</priority>
                            <manual_close>YES</manual_close>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <master_item>
                        <key>zwl.az-mon</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#ID}</lld_macro>
                            <path>$.essentials.originAlertId</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#RULE}</lld_macro>
                            <path>$.essentials.alertRule</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#STATE}</lld_macro>
                            <path>$.essentials.monitorCondition</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.data</params>
                            <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>return '['+value+']'</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <name>GCP alert discovery</name>
                    <type>DEPENDENT</type>
                    <key>zwl.gcp.alerts[discovery]</key>
                    <delay>0</delay>
                    <lifetime>7d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>GCP alert state [{#ID}]</name>
                            <type>DEPENDENT</type>
                            <key>zwl.gcp.state[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <applications>
                                <application>
                                    <name>GCP</name>
                                </application>
                            </applications>
                            <application_prototypes>
                                <application_prototype>
                                    <name>{#PROJECTID}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.incident.state</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>zwl.gcp</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>GCP alert summary [{#ID}]</name>
                            <type>DEPENDENT</type>
                            <key>zwl.gcp.summary[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <applications>
                                <application>
                                    <name>GCP</name>
                                </application>
                            </applications>
                            <application_prototypes>
                                <application_prototype>
                                    <name>{#PROJECTID}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>NOT_MATCHES_REGEX</type>
                                    <params>&quot;closed&quot;,</params>
                                    <error_handler>DISCARD_VALUE</error_handler>
                                </step>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.incident.summary</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>zwl.gcp</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Zabbix Agent Webhook Listener:zwl.gcp.summary[{#ID}].strlen()}&gt;0 and &#13;
{Zabbix Agent Webhook Listener:zwl.gcp.state[{#ID}].str(closed)}=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Zabbix Agent Webhook Listener:zwl.gcp.state[{#ID}].str(closed)}=1</recovery_expression>
                            <name>GCP Alert:{ITEM.VALUE1}</name>
                            <priority>AVERAGE</priority>
                            <manual_close>YES</manual_close>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <master_item>
                        <key>zwl.gcp</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#ID}</lld_macro>
                            <path>$.incident.incident_id</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#POLICY}</lld_macro>
                            <path>$.incident.policy_name</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#PROJECTID}</lld_macro>
                            <path>$.incident.resource.labels.project_id</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#STATE}</lld_macro>
                            <path>$.incident.state</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SUMMARY}</lld_macro>
                            <path>$.incident.summary</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>return '['+value+']'</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$ZBX_WHL_HOST}</macro>
                    <value>localhost</value>
                </macro>
                <macro>
                    <macro>{$ZBX_WHL_PORT}</macro>
                    <value>80</value>
                </macro>
                <macro>
                    <macro>{$ZBX_WHL_PROTO}</macro>
                    <value>http</value>
                </macro>
                <macro>
                    <macro>{$ZBX_WHL_PWD}</macro>
                    <value>password</value>
                </macro>
                <macro>
                    <macro>{$ZBX_WHL_USER}</macro>
                    <value>user</value>
                </macro>
            </macros>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{Zabbix Agent Webhook Listener:zwl.webhook.countainer.stats.messages.strlen()}&gt;2 and {Zabbix Agent Webhook Listener:zwl.webhook.countainer.stats.errors.last()}&gt;0</expression>
            <name>Zabbix webhook container has errors : {ITEM.VALUE}</name>
            <priority>WARNING</priority>
            <manual_close>YES</manual_close>
        </trigger>
    </triggers>
    <value_maps>
        <value_map>
            <name>Service state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Down</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
